import com.android.build.gradle.internal.tasks.FinalizeBundleTask

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.appdistribution'

def SCHEME_BASE = "cryptoxmwallet"
def WC_SCHEME_BASE = "cryptox-wc"
def PROVIDER_AUTHORITY_BASE = "com.pioneeringtechventures.wallet.DataFileProvider"

def configurableSigningProperties = new Properties()
configurableSigningProperties.load(new FileInputStream(
        file(System.getenv("CONFIGURABLE_SIGNING_PROPERTIES_FILE") ?: "dev-signing.properties")
))

android {
    // This project uses semantic versioning
    // https://semver.org/
    def versionMajor = 1
    def versionMinor = 4
    def versionPatch = 0
    def versionMeta = "-qa.10"
    def versionCodeIncremental = 1417

    compileSdkVersion 34

    defaultConfig {
        applicationId "com.pioneeringtechventures.wallet"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode versionCodeIncremental
        versionName "${versionMajor}.${versionMinor}.${versionPatch}${versionMeta}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("boolean", "USE_BACKEND_MOCK", "false")
        buildConfigField("boolean", "INCL_DEV_OPTIONS", "false")
        buildConfigField("boolean", "SHOW_GTU_DROP", "false")
        buildConfigField("Long", "ACCOUNT_UPDATE_FREQUENCY_SEC", "60l")
        buildConfigField("boolean", "FAIL_IDENTITY_CREATION", "false")
        buildConfigField("boolean", "FORCE_NO_EMAIL_CLIENTS", "false")
        buildConfigField("boolean", "SHOW_NEWSFEED", "true")
        buildConfigField("String", "URL_NEWSFEED_ARTICLES_RSS", "\"https://concordium-new.webflow.io/cryptox-news-articles/rss.xml\"")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"]
            }
        }

        firebaseAppDistribution {
            // This file is created by CI.
            serviceCredentialsFile = file("app-distribution-credentials.json")
        }
    }

    signingConfigs {
        configurable {
            storeFile file(configurableSigningProperties['storeFile'])
            storePassword configurableSigningProperties['storePassword']
            keyAlias configurableSigningProperties['keyAlias']
            keyPassword configurableSigningProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            debuggable true
        }

        release {
            debuggable false
            signingConfig signingConfigs.configurable
            // Unlocking requires vigilant testing.
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        // Unstable Concordium test network, fake funds and identities. No Spaceseven instance.
        stagenet {
            applicationIdSuffix ".stagenet"

            buildConfigField("String", "EXPORT_CHAIN", "\"staging\"")
            buildConfigField("String", "ENV_NAME", "\"staging\"")
            buildConfigField("String", "URL_PROXY_BASE", "\"https://wallet-proxy.stagenet.concordium.com\"")
            buildConfigField("String", "URL_EXPLORER_BASE", "\"https://stagenet.ccdscan.io/\"")
            buildConfigField("String", "URL_NOTIFICATIONS_BASE", "\"https://notification-api.stagenet.concordium.com/api/\"")

            buildConfigField("boolean", "SHOW_GTU_DROP", "true")

            def scheme = SCHEME_BASE + "-stagenet"
            buildConfigField("String", "SCHEME", "\"${scheme}\"")
            resValue "string", "scheme", "\"${scheme}\""

            resValue "string", "wc_scheme", "\"${WC_SCHEME_BASE + "-stagenet"}\""

            def providerAuthority = PROVIDER_AUTHORITY_BASE + "-stagenet"
            resValue "string", "PROVIDER_AUTHORITY", "\"${providerAuthority}\""
            buildConfigField("String", "PROVIDER_AUTHORITY", "\"${providerAuthority}\"")

            // There is no Spaceseven instance for Stagenet.
            // This domain won't resolve.
            buildConfigField("String", "S7_DOMAIN", "\"https://stagenet.spaceseven.cloud\"")

            firebaseAppDistribution {
                appId = '1:124880082147:android:44ec3892cba12e73c7e1d6'
                groups = "concordium-team"
            }
        }

        // Public Concordium test network, fake funds and identities. Spaceseven stage.
        // It is called 'tstnet' because flavour names can't start with 'test'
        tstnet {
            applicationIdSuffix ".testnet"

            buildConfigField("String", "EXPORT_CHAIN", "\"testnet\"")
            buildConfigField("String", "ENV_NAME", "\"testnet\"")
            buildConfigField("String", "URL_PROXY_BASE", "\"https://wallet-proxy.testnet.concordium.com\"")
            buildConfigField("String", "URL_EXPLORER_BASE", "\"https://testnet.ccdscan.io/\"")
            buildConfigField("String", "URL_NOTIFICATIONS_BASE", "\"https://notification-api.testnet.concordium.com/api/\"")

            buildConfigField("boolean", "SHOW_GTU_DROP", "true")

            def scheme = SCHEME_BASE + "-testnet"
            buildConfigField("String", "SCHEME", "\"${scheme}\"")
            resValue "string", "scheme", "\"${scheme}\""

            resValue "string", "wc_scheme", "\"${WC_SCHEME_BASE + "-testnet"}\""

            def providerAuthority = PROVIDER_AUTHORITY_BASE + "-testnet"
            resValue "string", "PROVIDER_AUTHORITY", "\"${providerAuthority}\""
            buildConfigField("String", "PROVIDER_AUTHORITY", "\"${providerAuthority}\"")

            // Yes, stage. Spaceseven stage runs on Concordium Testnet.
            buildConfigField("String", "S7_DOMAIN", "\"https://stage.spaceseven.cloud\"")

            firebaseAppDistribution {
                appId = '1:124880082147:android:40bb3b4880d6aa92c7e1d6'
                groups = "concordium-team, spaceseven-team"
            }
        }

        // Public Concordium network, real funds and identities. Spaceseven production.
        mainnet {
            buildConfigField("String", "EXPORT_CHAIN", "\"mainnet\"")
            buildConfigField("String", "ENV_NAME", "\"production\"")
            buildConfigField("String", "URL_PROXY_BASE", "\"https://wallet-proxy.mainnet.concordium.software\"")
            buildConfigField("String", "URL_EXPLORER_BASE", "\"https://ccdscan.io/\"")
            buildConfigField("String", "URL_NOTIFICATIONS_BASE", "\"https://notification-api.mainnet.concordium.software/api/\"")

            buildConfigField("boolean", "SHOW_GTU_DROP", "false")

            def scheme = SCHEME_BASE
            buildConfigField("String", "SCHEME", "\"${scheme}\"")
            resValue "string", "scheme", "\"${scheme}\""

            resValue "string", "wc_scheme", "\"${WC_SCHEME_BASE}\""

            def providerAuthority = PROVIDER_AUTHORITY_BASE
            resValue "string", "PROVIDER_AUTHORITY", "\"${providerAuthority}\""
            buildConfigField("String", "PROVIDER_AUTHORITY", "\"${providerAuthority}\"")

            buildConfigField("String", "S7_DOMAIN", "\"https://spaceseven.com\"")

            firebaseAppDistribution {
                appId = '1:124880082147:android:250469ea97158747c7e1d6'
                groups = "concordium-team, spaceseven-team"
            }
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/atomicfu.kotlin_module']
            excludes += ['META-INF/INDEX.LIST']
            excludes += ['META-INF/DEPENDENCIES']
            excludes += ['META-INF/LICENSE.md']
            excludes += ['META-INF/NOTICE.md']
            excludes += ['META-INF/versions/**']
        }
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'com.concordium.wallet'

    // Set meaningful names for build artifacts.
    applicationVariants.all { variant ->
        def flavor = variant.productFlavors[0].name
        def artifactName = "cryptox-" +
                flavor + "-" +
                variant.buildType.name + "-" +
                variant.versionName

        // APK.
        variant.outputs.all {
            outputFileName = artifactName + ".apk"
        }

        // AAB.
        tasks.named("sign${variant.name.capitalize()}Bundle", FinalizeBundleTask) {
            File file = finalBundleFile.asFile.get()
            File finalFile = new File(file.parentFile, artifactName + ".aab")
            finalBundleFile.set(finalFile)
        }
    }
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KaptGenerateStubs).configureEach {
        kotlinOptions.jvmTarget = "1.8"
    }
}

dependencies {

    implementation("com.concordium.sdk:concordium-android-sdk:7.2.0") {
        exclude group: "org.bouncycastle"
        exclude group: "net.jcip"
    }

    def lifecycle_version = "2.4.0"
    def room_version = "2.5.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"

    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'
    implementation 'com.caverock:androidsvg-aar:1.4'

    implementation "com.github.komputing.khash:sha256:1.1.1"

    // Android/Google
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'com.google.iot.cbor:cbor:0.01.02'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // Lifecycles
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation 'androidx.fragment:fragment-ktx:1.4.0'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Barcode
    implementation "com.journeyapps:zxing-android-embedded:4.1.0"

    // Chrome custom tabs
    implementation 'androidx.browser:browser:1.4.0'

    implementation 'com.github.Redman1037:TSnackBar:V2.0.0'
    implementation 'com.github.Dimezis:BlurView:version-2.0.3'

    // OkHttp/Retrofit
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.2.21'

    // Navigation
    def navigationVersion = '2.3.5'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Crypto library
    implementation project(":mobile_wallet_lib-release")

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "android.arch.persistence.room:testing:1.1.1"

    // Reown (formerly WalletConnect)
    implementation(platform "com.reown:android-bom:1.0.0")
    implementation "com.reown:android-core"
    implementation "com.reown:sign"

    // Scarlet Gson adapter required for Spaceseven wallet connection.
    implementation("com.tinder.scarlet:message-adapter-gson:0.1.12") {
        // Core must be excluded to avoid class duplication when using WalletConnect.
        exclude group: 'com.tinder.scarlet', module: 'scarlet-core'
    }

    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // BIP39
    implementation "cash.z.ecc.android:kotlin-bip39:1.0.4"

    // Jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.1'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.10.1'

    // Jackson XML
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.10.1'
    implementation 'javax.xml.stream:stax-api:1.0-2'

    // Matomo analytics
    implementation 'com.github.matomo-org:matomo-sdk-android:4.1.4'

    // Push notifications
    implementation 'com.google.firebase:firebase-messaging:24.0.0'
    implementation 'com.google.android.gms:play-services-location:21.3.0'

    // Lottie animations
    implementation 'com.airbnb.android:lottie:6.0.0'
}

task printVersionName {
    group = "help"
    doLast {
        println android.defaultConfig.versionName
    }
}
